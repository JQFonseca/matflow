task_schemas:

  - name: estimate_ODF
    version: 1
    outputs:
      - ODF
    methods:
      - name: from_CTF_file
        version: 1
        inputs: 
          - _file:CTF_file_path
          - rotation_angle
        implementations:
          - name: matlab_mtex
            version: 1
            input_map:
              - inputs:
                  - _file:CTF_file_path
                  - rotation_angle
                file: estimate_ODF_from_CTF.m
            commands:
              - cmd: matlab -nodisplay -nosplash -nodesktop -r -wait "run('estimate_ODF_from_CTF.m'); exit;"
            output_map:
              - files:
                  - odf.txt
                output: ODF

  - name: model_ODF
    version: 1
    outputs:
      - ODF
    methods:
      - name: uniform_ODF
        version: 1
        inputs:
          - crystal_symmetry
          - specimen_symmetry
        implementations:
          - name: matlab_mtex
            version: 1
            input_map:
              - inputs:
                  - crystal_symmetry
                  - specimen_symmetry
                file: create_model_ODF.m
            commands:
              - cmd: matlab -nodisplay -nosplash -nodesktop -r -wait "run('create_model_ODF.m'); exit;"
            output_map:
              - files:
                  - odf.txt
                output: ODF
      - name: unimodal
        inputs:
          - modal_orientation
          - crystal_symmetry
          - specimen_symmetry
          - halfwidth
        implementations:
          - name: matlab_mtex
            version: 1
            input_map:
              - inputs:
                - modal_orientation
                - crystal_symmetry
                - specimen_symmetry
                - halfwidth
                file: create_model_ODF.m
            commands:
              - cmd: matlab -nodisplay -nosplash -nodesktop -r -wait "run('create_model_ODF.m'); exit;"
            output_map:
              - files:
                  - odf.txt
                output: ODF                

  - name: sample_texture
    version: 1
    outputs:
      - orientations
    methods:
      - name: from_ODF
        version: 1
        inputs: 
          - ODF
          - num_orientations
        implementations:
          - name: matlab_mtex
            version: 1
            input_map:
              - inputs:
                  - ODF
                  - num_orientations
                file: sample_texture_from_ODF.m
            commands:
              - cmd: matlab -nodisplay -nosplash -nodesktop -r -wait "run('sample_texture_from_ODF.m'); exit;"
            output_map:
              - files:
                  - orientations.txt
                output: orientations

  - name: generate_microstructure_seeds
    version: 1
    outputs:
      - microstructure_seeds
    methods:
      - name: random
        version: 1
        inputs:
          - grid_size
          - num_grains          
        implementations:
          - name: damask
            version: 1
            outputs:
              - microstructure_seeds
            commands:
              - cmd: seeds_fromRandom
                stdout: positions.txt
                arg_labels: 
                  N: num_grains
                  g: grid_size           
            output_map:
              - files: [positions.txt]
                output: microstructure_seeds

  - name: generate_volume_element
    version: 1
    outputs:
      - volume_element
    methods:
      - name: random_voronoi_from_orientations      
        version: 1
        notes: >
          In this method we replace the orientations in microstructure_seeds
          with orientations computed from a previous task.        
        inputs:
          - microstructure_seeds
          - orientations
          - size
        implementations:
          - name: damask
            version: 1
            inputs:
              - rescale_size
              - rescale_grid
              # - canvas_grid
            input_map:
              - inputs:
                  - microstructure_seeds
                  - orientations
                file: orientation.seeds
            output_map:
              - files:
                  - volume_element.geom
                output: volume_element
            commands:
              - cmd: geom_fromVoronoiTessellation -o 0.0 0.0 0.0
                stdin: orientation.seeds
                stdout: volume_element_initial.geom 
                arg_labels:
                  s: size
              - cmd: geom_rescale
                stdin: volume_element_initial.geom
                stdout: volume_element.geom
                arg_labels:
                  g: rescale_grid
                  s: rescale_size
              # - cmd: geom_canvas
              #   stdin: volume_element_rescaled.geom
              #   stdout: volume_element.geom
              #   arg_labels:
              #     g: canvas_grid                  
      - name: random_voronoi
        version: 1
        notes: >
          In this method we use the random orientations that already exist in
          microstructure_seeds.
        inputs:
          - microstructure_seeds
          - size
        implementations:
          - name: damask
            inputs: 
              - rescale_size            
              - rescale_grid
            version: 1
            input_map:
              - inputs:
                  - microstructure_seeds
                file: orientation.seeds
            output_map:
              - files:
                  - volume_element.geom
                output: volume_element
            commands:
              - cmd: geom_fromVoronoiTessellation
                stdin: orientation.seeds
                stdout: volume_element_initial.geom 
                arg_labels:
                  s: size
              - cmd: geom_rescale
                stdin: volume_element_initial.geom
                stdout: volume_element.geom
                arg_labels:
                  g: rescale_grid
                  s: rescale_size                  
  
  - name: generate_load_case
    version: 1
    inputs:
      - time
      - incs
      - target_strain_rate    
    methods:
      - name: uniaxial
        version: 1
        inputs:
          - direction # x, y or z
      - name: biaxial
        version: 1
        inputs:
          - direction # xy, xz or yz        
      - name: plane_strain
        version: 1
        inputs:
          - direction # xy, xz or yz
      - name: random_2d
        version: 1
        inputs:
          - normal_direction # x, y, or z (i.e. load in yz, xz or xy planes)
      - name: random_3d
        version: 1
        inputs: []
      - name: random_3d_v2
        version: 1
        inputs: []
    outputs:
      - load_case

  - name: visualise_volume_element
    version: 1
    inputs:
      - volume_element
    methods:
      - name: VTK
        version: 1
        implementations:
          - name: damask
            version: 1
            input_map: 
              - inputs:
                  - volume_element
                file: geom.vtk
            commands:
              - cmd: geom_check geom.geom

  - name: simulate_volume_element_loading
    version: 1
    inputs: 
      - load_case
      - volume_element
      - material_properties
    methods:
      - name: CP_FFT
        version: 1
        implementations:
          - name: damask
            version: 1
            input_map:
              - inputs:
                  - material_properties
                  - volume_element
                file: material.config
              - inputs:
                  - load_case
                file: load.load
              - inputs:
                  - volume_element
                file: geom.geom
            output_map:
              - files: 
                  - geom_load.txt
                output: volume_element_response
            commands:
              - cmd: DAMASK_spectral
                arg_labels:
                  l: _file:load.load
                  g: _file:geom.geom
                stdout: stdout.log
              # - cmd: postResults --cr "f,p" --co "totalshear" geom_load.spectralOut
              - cmd: postResults --dir . --cr "f,p" geom_load.spectralOut
              - cmd: addCauchy geom_load.txt
              - cmd: addStrainTensors --logarithmic --left geom_load.txt
              - cmd: addMises --stress "Cauchy" --strain "ln(V)" geom_load.txt
              # - cmd: postResults --dir . --cr "f,p" --co "totalshear" --range 160 160 1 --increments --split --separation "x,y,z" geom_load.spectralOut
              # - cmd: addCauchy geom_load_inc160.txt
              # - cmd: addStrainTensors --logarithmic --left geom_load_inc160.txt
              # - cmd: addMises --stress "Cauchy" --strain "ln(V)" geom_load_inc160.txt
              # - cmd: vtk_rectilinearGrid geom_load_inc160.txt
              # - cmd: vtk_addRectilinearGridData --data "Mises(Cauchy),Mises(ln(V))" --vtk "geom_load_inc160_pos(cell).vtr" geom_load_inc160.txt
              # - cmd: addDisplacement --nodal geom_load_inc160.txt
              # - cmd: vtk_addRectilinearGridData --data "fluct(f).pos,avg(f).pos" --vtk "geom_load_inc160_pos(cell).vtr" geom_load_inc160_nodal.txt
